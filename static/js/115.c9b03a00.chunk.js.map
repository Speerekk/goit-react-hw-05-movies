{"version":3,"file":"static/js/115.c9b03a00.chunk.js","mappings":"sMAkEA,UA9DA,WACE,OAAsCA,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA0CF,EAAAA,EAAAA,UAAS,IAAnD,eAAOG,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAkCjB,OAhCAC,EAAAA,EAAAA,YAAU,WACR,IACMC,EADc,IAAIC,gBAAgBJ,EAASK,QACvBC,IAAI,SAC1BH,IACFR,EAAeQ,GACfI,EAAAA,EAAAA,IACO,4CAA6C,CAChDC,OAAQ,CACNC,QAAS,mCACTN,MAAOA,KAGVO,MAAK,SAAAC,GAAQ,OAAId,EAAiBc,EAASC,KAAKC,QAAnC,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,IAEjB,GAAE,CAACf,EAASK,UAkBX,4BACE,eAAIY,UAAU,SAAd,4BACA,kBAAMC,SAlBW,SAAAC,GACnBA,EAAMC,iBACNb,EAAAA,EAAAA,IACO,4CAA6C,CAChDC,OAAQ,CACNC,QAAS,mCACTN,MAAOT,KAGVgB,MAAK,SAAAC,GAAQ,OAAId,EAAiBc,EAASC,KAAKC,QAAnC,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,IAEdjB,EAAS,iBAAD,OAAkBuB,mBAAmB3B,IAC9C,EAKiCuB,UAAU,SAAxC,WACE,kBACEK,KAAK,OACLC,MAAO7B,EACP8B,SAAU,SAAAC,GAAC,OAAI9B,EAAe8B,EAAEC,OAAOH,MAA5B,EACXI,YAAY,mBACZV,UAAU,eAEZ,mBAAQK,KAAK,SAAb,wBAEF,wBACG1B,EAAcgC,KAAI,SAAAC,GAAK,OACtB,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME,GADO,QAQ/B,C","sources":["components/Movies/Movies.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate, Link, useLocation } from 'react-router-dom';\n\nfunction Movies() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const query = queryParams.get('query');\n    if (query) {\n      setSearchQuery(query);\n      axios\n        .get('https://api.themoviedb.org/3/search/movie', {\n          params: {\n            api_key: 'e9ca223ab9ca4a994e59de0722330ef2',\n            query: query,\n          },\n        })\n        .then(response => setSearchResults(response.data.results))\n        .catch(error => console.error(error));\n    }\n  }, [location.search]);\n\n  const handleSearch = event => {\n    event.preventDefault();\n    axios\n      .get('https://api.themoviedb.org/3/search/movie', {\n        params: {\n          api_key: 'e9ca223ab9ca4a994e59de0722330ef2',\n          query: searchQuery,\n        },\n      })\n      .then(response => setSearchResults(response.data.results))\n      .catch(error => console.error(error));\n\n    navigate(`/movies?query=${encodeURIComponent(searchQuery)}`);\n  };\n\n  return (\n    <div>\n      <h2 className=\"search\">Search Movies</h2>\n      <form onSubmit={handleSearch} className=\"search\">\n        <input\n          type=\"text\"\n          value={searchQuery}\n          onChange={e => setSearchQuery(e.target.value)}\n          placeholder=\"Enter movie name\"\n          className=\"search-in\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {searchResults.map(movie => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Movies;\n"],"names":["useState","searchQuery","setSearchQuery","searchResults","setSearchResults","navigate","useNavigate","location","useLocation","useEffect","query","URLSearchParams","search","get","axios","params","api_key","then","response","data","results","catch","error","console","className","onSubmit","event","preventDefault","encodeURIComponent","type","value","onChange","e","target","placeholder","map","movie","to","id","title"],"sourceRoot":""}