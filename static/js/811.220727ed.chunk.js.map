{"version":3,"file":"static/js/811.220727ed.chunk.js","mappings":"8LAgHA,UA5GA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAsCJ,EAAAA,EAAAA,UAAS,IAA/C,eAAOK,EAAP,KAAoBC,EAApB,KACA,GAAgCN,EAAAA,EAAAA,WAAS,GAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KACA,GAAsCR,EAAAA,EAAAA,WAAS,GAA/C,eAAOS,EAAP,KAAoBC,EAApB,KACMC,GAAWC,EAAAA,EAAAA,MA2CjB,OAzCAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAC6ChB,GAAW,CACpDiB,OAAQ,CACNC,QAAS,sCAGZC,MAAK,SAAAC,GAAQ,OAAIhB,EAAgBgB,EAASC,KAA7B,IACbC,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,IAEdP,EAAAA,EAAAA,IAAA,6CAC6ChB,EAD7C,YACgE,CAC5DiB,OAAQ,CACNC,QAAS,sCAGZC,MAAK,SAAAC,GAAQ,OAAId,EAAYc,EAASC,KAAKI,KAA9B,IACbH,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,IAEdP,EAAAA,EAAAA,IAAA,6CAC6ChB,EAD7C,YACgE,CAC5DiB,OAAQ,CACNC,QAAS,sCAGZC,MAAK,SAAAC,GAAQ,OAAIZ,EAAeY,EAASC,KAAKK,QAAjC,IACbJ,OAAM,SAAAC,GAAK,OAAIC,QAAQD,MAAMA,EAAlB,GACf,GAAE,CAACvB,KAeF,4BACE,mBAAQ2B,QANS,WACnBd,GAAU,EACX,EAIkCe,UAAU,cAAzC,sBAGA,iBAAKA,UAAU,QAAf,UACGzB,EAAa0B,cACZ,gBACEC,IAAG,yCAAoC3B,EAAa0B,aACpDE,IAAK5B,EAAa6B,SAGtB,wBAAK7B,EAAa6B,SAClB,uBAAI7B,EAAa8B,YAEjB,oCAAY9B,EAAa+B,iBACzB,mCACU,IACP/B,EAAagC,QACZhC,EAAagC,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,UAEtD,mBAAQZ,QAjCU,WACtBjB,GAAaD,EACd,EA+BuCmB,UAAU,eAA5C,SACGnB,EAAW,YAAc,eAE5B,mBAAQkB,QAhCa,WACzBf,GAAgBD,EACjB,EA8B0CiB,UAAU,eAA/C,SACGjB,EAAc,eAAiB,oBAInCF,IACC,4BACE,kCACA,wBACGJ,EAAS+B,KAAI,SAAAI,GAAK,OACjB,0BACGA,EAAMF,KADT,OACmBE,EAAMC,YADhBD,EAAME,GADE,SAQxB/B,IACC,4BACE,qCACA,wBACGJ,EAAY6B,KAAI,SAAAO,GAAM,OACrB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOD,GADK,WAWlC,C","sources":["components/MovieDetails/MoviesDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useParams, useNavigate } from 'react-router-dom';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState({});\n  const [castData, setCastData] = useState([]);\n  const [reviewsData, setReviewsData] = useState([]);\n  const [showCast, setShowCast] = useState(false);\n  const [showReviews, setShowReviews] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}`, {\n        params: {\n          api_key: 'e9ca223ab9ca4a994e59de0722330ef2',\n        },\n      })\n      .then(response => setMovieDetails(response.data))\n      .catch(error => console.error(error));\n\n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}/credits`, {\n        params: {\n          api_key: 'e9ca223ab9ca4a994e59de0722330ef2',\n        },\n      })\n      .then(response => setCastData(response.data.cast))\n      .catch(error => console.error(error));\n\n    axios\n      .get(`https://api.themoviedb.org/3/movie/${movieId}/reviews`, {\n        params: {\n          api_key: 'e9ca223ab9ca4a994e59de0722330ef2',\n        },\n      })\n      .then(response => setReviewsData(response.data.results))\n      .catch(error => console.error(error));\n  }, [movieId]);\n\n  const handleCastClick = () => {\n    setShowCast(!showCast);\n  };\n\n  const handleReviewsClick = () => {\n    setShowReviews(!showReviews);\n  };\n\n  const handleGoBack = () => {\n    navigate(-1);\n  };\n\n  return (\n    <div>\n      <button onClick={handleGoBack} className=\"button-back\">\n        Go Back\n      </button>\n      <div className=\"about\">\n        {movieDetails.poster_path && (\n          <img\n            src={`https://image.tmdb.org/t/p/w500${movieDetails.poster_path}`}\n            alt={movieDetails.title}\n          />\n        )}\n        <h2>{movieDetails.title}</h2>\n        <p>{movieDetails.overview}</p>\n\n        <p>Rating: {movieDetails.vote_average}</p>\n        <p>\n          Genres:{' '}\n          {movieDetails.genres &&\n            movieDetails.genres.map(genre => genre.name).join(', ')}\n        </p>\n        <button onClick={handleCastClick} className=\"button-about\">\n          {showCast ? 'Hide Cast' : 'Show Cast'}\n        </button>\n        <button onClick={handleReviewsClick} className=\"button-about\">\n          {showReviews ? 'Hide Reviews' : 'Show Reviews'}\n        </button>\n      </div>\n\n      {showCast && (\n        <div>\n          <h3>Cast</h3>\n          <ul>\n            {castData.map(actor => (\n              <li key={actor.id}>\n                {actor.name} as {actor.character}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {showReviews && (\n        <div>\n          <h3>Reviews</h3>\n          <ul>\n            {reviewsData.map(review => (\n              <li key={review.id}>\n                <h4>{review.author}</h4>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","movieDetails","setMovieDetails","castData","setCastData","reviewsData","setReviewsData","showCast","setShowCast","showReviews","setShowReviews","navigate","useNavigate","useEffect","axios","params","api_key","then","response","data","catch","error","console","cast","results","onClick","className","poster_path","src","alt","title","overview","vote_average","genres","map","genre","name","join","actor","character","id","review","author","content"],"sourceRoot":""}